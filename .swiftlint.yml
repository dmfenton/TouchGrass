# SwiftLint Configuration for Touch Grass
# Focus on critical rules that prevent bugs and improve code quality
# Disabled overly strict style rules to avoid massive refactoring

# Paths to include/exclude
included:
  - .
excluded:
  - build
  - releases
  - TouchGrass.xcodeproj
  - .git
  - generate_icon.swift # Generated file
  - GrassIconPreview.swift # Preview/test file

# Analyzer rules (require type checking, slower but more thorough)
analyzer_rules:
  - explicit_self
  - unused_declaration
  - unused_import

# Disabled rules that are too strict for this SwiftUI project
disabled_rules:
  - line_length # SwiftUI can have long lines
  - file_length # Some view files can be large
  - type_body_length # SwiftUI views can be large
  - function_body_length # Exercise data can create long functions
  - cyclomatic_complexity # SwiftUI state management can be complex
  - function_parameter_count # SwiftUI initializers can have many parameters
  - large_tuple # Acceptable for SwiftUI state
  - identifier_name # Allow short names like 'id', 'vm', etc.
  - type_name # Allow names like 'UI' components
  - nesting # SwiftUI encourages nesting
  - switch_case_alignment # SwiftUI switch statements
  - trailing_comma # Not critical
  - todo # Allow TODO comments during development
  - comment_spacing # Not critical
  - trailing_whitespace # Often conflicts with Xcode
  - switch_case_on_newline # Disabled to avoid conflicts
  - multiple_closures_with_trailing_closure # Common in SwiftUI
  - redundant_optional_initialization # Common pattern in SwiftUI
  - trailing_closure # Too strict for SwiftUI
  - unused_closure_parameter # Common in SwiftUI

# Opt-in rules (not enabled by default)
opt_in_rules:
  # Critical safety rules
  - force_unwrapping
  - implicitly_unwrapped_optional
  - strong_iboutlet
  - array_init
  - empty_string
  - first_where
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - empty_collection_literal
  - empty_count
  - flatmap_over_map_reduce
  - last_where
  - reduce_into
  - sorted_first_last
  
  # Code quality rules
  - redundant_nil_coalescing
  - redundant_type_annotation
  - toggle_bool
  - yoda_condition
  - operator_usage_whitespace
  - closure_spacing
  - literal_expression_end_indentation
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment
  - vertical_parameter_alignment_on_call

# Custom rule configurations
force_cast: warning
force_try: warning
force_unwrapping: error # Critical - should be error
implicitly_unwrapped_optional: error # Critical - should be error

# Custom message for critical rules
custom_rules:
  force_unwrap_warning:
    name: "Force Unwrap Warning"
    regex: '!\s*\)'
    message: "Consider using optional binding or nil coalescing instead of force unwrapping"
    severity: warning
    
  print_statement:
    name: "Print Statement"
    regex: '\bprint\s*\('
    message: "Use proper logging instead of print statements"
    severity: warning
    
  todo_without_issue:
    name: "TODO without issue reference"
    regex: '(?i)// TODO(?!.*#\d+)'
    message: "TODO comments should reference an issue number"
    severity: warning

# Reporter configuration
reporter: "xcode" # Use Xcode-compatible output format